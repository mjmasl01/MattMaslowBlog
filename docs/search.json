[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/STAT-313_MiniProj3/index.html",
    "href": "posts/STAT-313_MiniProj3/index.html",
    "title": "Mini Project: Study of # Satellites per Crab",
    "section": "",
    "text": "crab"
  },
  {
    "objectID": "posts/STAT-313_MiniProj3/index.html#variable-exploration",
    "href": "posts/STAT-313_MiniProj3/index.html#variable-exploration",
    "title": "Mini Project: Study of # Satellites per Crab",
    "section": "Variable Exploration",
    "text": "Variable Exploration\n\nExplore the response variable: Satellite\n\nggplot(crab, mapping = aes(x = Satellite)) + \n  geom_histogram(fill = \"gray\", color = \"black\", binwidth = 0.5) + \n  xlab(\"Satellite\") +\n  ylab(\"Count of crabs\") +\n  geom_vline(xintercept = mean(crab$Satellite), color = \"red\"\n             , linetype = \"dashed\", size = 1) +\n  theme_classic() +\n  guides(color = FALSE)\n\n\n\n\n\n\n\n\n\n\nExplore Individual Predictors:\n\nExplore Color\n\ntable(crab$Color) %&gt;% prop.table() %&gt;% signif(3) %&gt;% pander::pander()\n\n\n\n\n\n\n\n\n\n\n2\n3\n4\n5\n\n\n\n\n0.0694\n0.549\n0.254\n0.127\n\n\n\n\nsumStatsCol &lt;- crab %&gt;%\n  group_by(Color) %&gt;% \n  summarise(n = n(),\n            mntotal = mean(Satellite),\n            vartotal = var(Satellite), \n            logmntotal = log(mntotal)\n            )\nsumStatsCol\n\n# A tibble: 4 × 5\n  Color     n mntotal vartotal logmntotal\n  &lt;fct&gt; &lt;int&gt;   &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n1 2        12    4.08     9.72      1.41 \n2 3        95    3.29    10.3       1.19 \n3 4        44    2.23     6.74      0.801\n4 5        22    2.05    13.1       0.716\n\nggplot(sumStatsCol, aes(x = Color, y = logmntotal)) +\n  geom_point(size = 3) +\n  geom_smooth(method = \"loess\") +\n  xlab(\"Crab Color\") +\n  ylab(\"Log of the empirical mean number of Satellites\") +\n  labs(title = \"Color Vs. Log of empirical mean of Satellites\") +\n  theme_light()\n\n\n\n\n\n\n\n# check mean = variance\nggplot(sumStatsCol, aes(x = mntotal, y = vartotal)) + \n  geom_point( size = 3) +\n  geom_smooth(method = \"loess\") + \n  geom_abline(slope = 1, intercept = 0,\n              col = \"red\", size = 1, linetype = 3) +\n  ylim(-2.5, 15) +\n  xlab(\"Empirical mean number of Satellites per crab (by Color)\") +\n  ylab(\"Empirical variance in number of Satellites per crab (by Color)\") + \n  labs(title = \"Mean = Variance\") +\n  theme_light()\n\n\n\n\n\n\n\n\n\n\nExplore Spine\n\ntable(crab$Spine) %&gt;% prop.table() |&gt; signif(3) %&gt;% pander::pander()\n\n\n\n\n\n\n\n\n\n1\n2\n3\n\n\n\n\n0.214\n0.0867\n0.699\n\n\n\n\nsumStatsSp &lt;- crab %&gt;%\n  group_by(Spine) %&gt;% \n  summarise(n = n(),\n            mntotal = mean(Satellite),\n            vartotal = var(Satellite), \n            logmntotal = log(mntotal)\n            )\nsumStatsSp\n\n# A tibble: 3 × 5\n  Spine     n mntotal vartotal logmntotal\n  &lt;fct&gt; &lt;int&gt;   &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n1 1        37    3.65    11.5       1.29 \n2 2        15    2        5.57      0.693\n3 3       121    2.81     9.82      1.03 \n\nggplot(sumStatsSp, aes(x = Spine, y = logmntotal)) +\n  geom_point(size = 3) +\n  geom_smooth(method = \"loess\") +\n  xlab(\"Crab Spine\") +\n  ylab(\"Log of the empirical mean number of Satellites\") +\n  labs(title = \"Spine Vs. Log of empirical mean of Satellites\") +\n  theme_light()\n\n\n\n\n\n\n\n# check mean = variance\nggplot(sumStatsSp, aes(x = mntotal, y = vartotal)) + \n  geom_point( size = 3) +\n  geom_smooth(method = \"loess\") + \n  geom_abline(slope = 1, intercept = 0,\n              col = \"red\", size = 1, linetype = 3) +\n  ylim(-1, 12.5) +\n  xlab(\"Empirical mean number of Satellites per crab (by Spine)\") +\n  ylab(\"Empirical variance in number of Satellites per crab (by Spine)\") + \n  labs(title = \"Mean = Variance\") +\n  theme_light()\n\n\n\n\n\n\n\n\n\n\nExplore Width\n\nsumStatsWidth &lt;- crab %&gt;%\n  group_by(Width) %&gt;% \n  summarise(n = n(),\n            mntotal = mean(Satellite),\n            vartotal = var(Satellite), \n            logmntotal = log(mntotal)\n            )\n# sumStatsWidth\nggplot(sumStatsWidth, aes(x = Width, y = logmntotal)) +\n  geom_point() +\n  geom_smooth(method = \"loess\") +\n  xlab(\"Crab Width\") +\n  ylab(\"Log of the empirical mean number of Satellites\") +\n  labs(title = \"Width Vs. Log of empirical mean of Satellites\") +\n  theme_light()\n\n\n\n\n\n\n\n# check mean = variance\nggplot(sumStatsWidth, aes(x = mntotal, y = vartotal)) + \n  geom_point() +\n  geom_smooth(method = \"loess\") + \n  geom_abline(slope = 1, intercept = 0,\n              col = \"red\", size = 1, linetype = 3) +\n  xlab(\"Empirical mean number of Satellites per crab (by Width)\") +\n  ylab(\"Empirical variance in number of Satellites per crab (by Width)\") + \n  labs(title = \"Mean = Variance\") +\n  theme_light()\n\n\n\n\n\n\n\n\n\n\nExplore Weight\n\nsumStatsWght &lt;- crab %&gt;%\n  group_by(Weight) %&gt;% \n  summarise(n = n(),\n            mntotal = mean(Satellite),\n            vartotal = var(Satellite), \n            logmntotal = log(mntotal)\n            )\n# sumStatsWght\nggplot(sumStatsWght, aes(x = Weight, y = logmntotal)) +\n  geom_point() +\n  geom_smooth(method = \"loess\") +\n  xlab(\"Crab Weight\") +\n  ylab(\"Log of empirical mean of Satellites\") +\n  labs(title = \"Weight Vs. Log of empirical mean of Satellites\") +\n  theme_light()\n\n\n\n\n\n\n\n# check mean = variance\nggplot(sumStatsWght, aes(x = mntotal, y = vartotal)) + \n  geom_point() +\n  geom_smooth(method = \"loess\") + \n  geom_abline(slope = 1, intercept = 0,\n              col = \"red\", size = 1, linetype = 3) +\n  xlab(\"Empirical mean number of Satellites per crab (by Weight)\") +\n  ylab(\"Empirical variance in number of Satellites per crab (by Weight)\") + \n  xlim(0, 7.25)+\n  labs(title = \"Mean = Variance\") +\n  theme_light()\n\n\n\n\n\n\n\n\n\n\n\nExplore predictor Combinations:\n\nExplore by Width and Color\n\nsumStatsWidCol &lt;- crab %&gt;% \n  group_by(Color, Width) %&gt;%\n  summarise(n = n(),\n            mntotal = mean(Satellite),\n            vartotal = var(Satellite),\n            logmntotal = log(mntotal,)\n            )\n# sumStatsWidCol\nggplot(sumStatsWidCol, aes(x = Width, y = logmntotal, color = Color)) +\n  geom_point(size = 2)+\n  geom_smooth(method = \"loess\", se=FALSE) +\n  labs(title = \"Width & Color Predicts Log of empirical mean of Satellites\") +\n  xlab(\"Widths of Crab\") +\n  ylab(\"Log empirical mean Satellite Count\") +\n  theme_light()\n\n\n\n\n\n\n\n# mean = variance\nggplot(sumStatsWidCol, aes(x = mntotal, y = vartotal)) +\n  geom_point(size = 2)+\n  geom_smooth(method = \"loess\") +\n  geom_abline(slope = 1, intercept = 0,\n              col = \"red\", size = 2, linetype = 3) +\n  xlim(0, 8)+\n  labs(title = \"Mean = Variance\") +\n  xlab(\"Mean total\") +\n  ylab(\"Variance Total\") +\n  theme_light()\n\n\n\n\n\n\n\n\n\n\nExplore by Weight and Color\n\nsumStatsWghtCol &lt;- crab %&gt;% \n  group_by(Color, Weight) %&gt;%\n  summarise(n = n(),\n            mntotal = mean(Satellite),\n            vartotal = var(Satellite),\n            logmntotal = log(mntotal)\n            )\n# sumStatsWghtCol\nggplot(sumStatsWghtCol, aes(x = Weight, y = logmntotal, color = Color)) +\n  geom_point(size = 3)+\n  geom_smooth(method = \"loess\", se=FALSE)+\n  xlab(\"Weight of Crab\") +\n  ylab(\"Log empirical mean Satellite Count\") +\n  theme_light()\n\n\n\n\n\n\n\nggplot(sumStatsWghtCol, aes(x = mntotal, y = vartotal)) +\n  geom_point(size = 2)+\n  geom_smooth(method = \"loess\") +\n  geom_abline(slope = 1, intercept = 0,\n              col = \"red\", size = 2, linetype = 3) +\n  xlim(0, 8) +\n  labs(title = \"Mean = Variance\") +\n  xlab(\"Mean total\") +\n  ylab(\"Variance Total\") +\n  theme_light()"
  },
  {
    "objectID": "posts/STAT-313_MiniProj3/index.html#questions",
    "href": "posts/STAT-313_MiniProj3/index.html#questions",
    "title": "Mini Project: Study of # Satellites per Crab",
    "section": "Questions",
    "text": "Questions\n\n1. Any evidence you consider to evaluate Poisson regression’s mean = variance assumption (with your thoughts on the validity of the assumption)?\n\n\n2. Plots (with commentary) that explore the utility of the available explanatory variables for predicting number of satellites"
  },
  {
    "objectID": "posts/STAT-313_MiniProj3/index.html#include-a-summary-of-the-model-output",
    "href": "posts/STAT-313_MiniProj3/index.html#include-a-summary-of-the-model-output",
    "title": "Mini Project: Study of # Satellites per Crab",
    "section": "1. Include a summary of the model output",
    "text": "1. Include a summary of the model output\n\nsummary(mod)\n\n\nCall:\nglm(formula = Satellite ~ Weight + Width + I(Width^2) + color4, \n    family = \"poisson\", data = crab)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-3.2243  -1.8311  -0.5256   0.7874   4.7646  \n\nCoefficients:\n              Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -2.159e+01  5.433e+00  -3.974 7.07e-05 ***\nWeight       6.948e-04  1.800e-04   3.860 0.000114 ***\nWidth        1.561e+00  3.991e-01   3.911 9.19e-05 ***\nI(Width^2)  -2.892e-02  7.464e-03  -3.875 0.000107 ***\ncolor4      -2.335e-01  1.135e-01  -2.058 0.039628 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 632.79  on 172  degrees of freedom\nResidual deviance: 538.64  on 168  degrees of freedom\nAIC: 903.94\n\nNumber of Fisher Scoring iterations: 6"
  },
  {
    "objectID": "posts/STAT-313_MiniProj3/index.html#conduct-a-hypothesis-test-to-determine-if-there-is-evidence-that-this-model-is-useful",
    "href": "posts/STAT-313_MiniProj3/index.html#conduct-a-hypothesis-test-to-determine-if-there-is-evidence-that-this-model-is-useful",
    "title": "Mini Project: Study of # Satellites per Crab",
    "section": "2. Conduct a hypothesis test to determine if there is evidence that this model is useful",
    "text": "2. Conduct a hypothesis test to determine if there is evidence that this model is useful\n\nmodRed = glm(formula = Satellite ~ Weight + Width,\n             family = \"poisson\", data = crab\n             )\nsummary(modRed)\n\n\nCall:\nglm(formula = Satellite ~ Weight + Width, family = \"poisson\", \n    data = crab)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.9309  -1.9702  -0.5478   0.9700   4.9904  \n\nCoefficients:\n              Estimate Std. Error z value Pr(&gt;|z|)   \n(Intercept) -1.2952111  0.8988960  -1.441  0.14962   \nWeight       0.0004470  0.0001586   2.818  0.00483 **\nWidth        0.0460765  0.0467497   0.986  0.32433   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 632.79  on 172  degrees of freedom\nResidual deviance: 559.90  on 170  degrees of freedom\nAIC: 921.2\n\nNumber of Fisher Scoring iterations: 6\n\n\n$H_O: B_3=0 , B_4=0 $ \\(H_A: B_3\\not=0 , B_4\\not= 0\\)\n\nDevRed = 559.90\nDevFull = 538.64\ndf = 170 - 168\npchisq(DevRed-DevFull, df, lower.tail = FALSE) %&gt;% signif(digits = 4)\n\n[1] 2.418e-05\n\n\nWe can conclude that based off the likelihood ratio test, there is evidence that the full model is the better choice (\\(ts=21.26\\),\\(df = 2\\),\\(P\\approx0\\))"
  },
  {
    "objectID": "posts/STAT-313_MiniProj3/index.html#include-an-interpretation-of-the-estimated-coefficient-on-carapace-width.-include-a-discussion-about-the-significance-of-carapace-width-in-the-model",
    "href": "posts/STAT-313_MiniProj3/index.html#include-an-interpretation-of-the-estimated-coefficient-on-carapace-width.-include-a-discussion-about-the-significance-of-carapace-width-in-the-model",
    "title": "Mini Project: Study of # Satellites per Crab",
    "section": "3.Include an interpretation of the estimated coefficient on carapace width. Include a discussion about the significance of carapace width in the model",
    "text": "3.Include an interpretation of the estimated coefficient on carapace width. Include a discussion about the significance of carapace width in the model\nWe can interpret the estimated coefficient on carapace width as…. For every unit added to the width, the difference in the logs of expected satellite count changes by 1.369351, given the other predictor variables in the model are held constant."
  },
  {
    "objectID": "posts/STAT-313_MiniProj3/index.html#conduct-a-hypothesis-test-to-determine-if-there-is-evidence-that-the-model-has-significant-lack-of-fit",
    "href": "posts/STAT-313_MiniProj3/index.html#conduct-a-hypothesis-test-to-determine-if-there-is-evidence-that-the-model-has-significant-lack-of-fit",
    "title": "Mini Project: Study of # Satellites per Crab",
    "section": "4. Conduct a hypothesis test to determine if there is evidence that the model has significant lack of fit",
    "text": "4. Conduct a hypothesis test to determine if there is evidence that the model has significant lack of fit\n\\(H_O:B_1=0,B_2=0,B_3=0,B_4=0\\) \\(H_A:\\) At least one \\(B_i\\not=0\\)\n\npchisq(554.17, df = 169, lower.tail = FALSE) %&gt;% signif(digits = 4)\n\n[1] 1.655e-42\n\n\nThere is no evidence that the model has significant lack of fit, with \\(P\\approx0\\)"
  },
  {
    "objectID": "posts/STAT-313_MiniProj3/index.html#if-you-believe-there-is-a-significant-problem-with-overdispersion",
    "href": "posts/STAT-313_MiniProj3/index.html#if-you-believe-there-is-a-significant-problem-with-overdispersion",
    "title": "Mini Project: Study of # Satellites per Crab",
    "section": "1. if you believe there is a significant problem with overdispersion",
    "text": "1. if you believe there is a significant problem with overdispersion\nDispersion parameter (No overdispersion, if 1 or less)\nYes there is a problem with the dispersion parameter, since it is greater than 1, therefore implying that the model has been overdispersed.\n\\(\\hat{\\phi}=3.124796\\) considered a scalar"
  },
  {
    "objectID": "posts/STAT-313_MiniProj3/index.html#the-impact-that-adjusting-for-overdispersion-has-on-the-performance-of-your-model.",
    "href": "posts/STAT-313_MiniProj3/index.html#the-impact-that-adjusting-for-overdispersion-has-on-the-performance-of-your-model.",
    "title": "Mini Project: Study of # Satellites per Crab",
    "section": "2. the impact that adjusting for overdispersion has on the performance of your model.",
    "text": "2. the impact that adjusting for overdispersion has on the performance of your model.\n\n# LOF-test\npchisq(\n  summary(modQ)$deviance,\n  summary(modQ)$df.residual, \n  lower.tail = FALSE\n       ) %&gt;% signif(digits = 4)\n\n[1] 2.053e-40\n\n\n\nmodred = glm(formula = Satellite ~ Weight + Width + color4,\n             family = \"quasipoisson\", data = crab, offset = log(Width)\n             )\nsummary (modred)\n\n\nCall:\nglm(formula = Satellite ~ Weight + Width + color4, family = \"quasipoisson\", \n    data = crab, offset = log(Width))\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.9902  -1.9670  -0.5098   0.9451   4.8609  \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)  \n(Intercept) -3.3276750  1.6023276  -2.077   0.0393 *\nWeight       0.0004571  0.0002811   1.626   0.1058  \nWidth        0.0001963  0.0829475   0.002   0.9981  \ncolor4      -0.2238217  0.2016238  -1.110   0.2685  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for quasipoisson family taken to be 3.129959)\n\n    Null deviance: 606.45  on 172  degrees of freedom\nResidual deviance: 555.05  on 169  degrees of freedom\nAIC: NA\n\nNumber of Fisher Scoring iterations: 6\n\n\n\\(H_O: B_3 = 0, B_4 = 0\\) $H_A: B_3 = 0, B_4 = 0 $\n\n#LRT\nanova(modred, modQ, test = \"LRT\")\n\nAnalysis of Deviance Table\n\nModel 1: Satellite ~ Weight + Width + color4\nModel 2: Satellite ~ Weight + Width + I(Width^2) + color4\n  Resid. Df Resid. Dev Df Deviance Pr(&gt;Chi)  \n1       169     555.05                       \n2       168     538.63  1   16.417   0.0219 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n# LRT\nDevRed = 555.05\nDevFull = 538.63\ndf = 169 - 168\npchisq(DevRed-DevFull, df, lower.tail = FALSE) %&gt;% signif(digits = 4)\n\n[1] 5.075e-05\n\n\nCan conclude that the full model is the better choice, according to the likelihood ratio test results…. $ts = 16.417, df = 2, P=0.0219 $"
  },
  {
    "objectID": "posts/ME/index.html",
    "href": "posts/ME/index.html",
    "title": "About Me",
    "section": "",
    "text": "Me"
  },
  {
    "objectID": "posts/Electric Cars/index.html",
    "href": "posts/Electric Cars/index.html",
    "title": "Electric Car Population in Washington",
    "section": "",
    "text": "Electric Cars\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nRead in Data\n\neCar &lt;- read_csv(here::here(\"posts/Electric Cars/Electric_Vehicle_Population_Data.csv\"))\n\nRows: 173533 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): VIN (1-10), County, City, State, Make, Model, Electric Vehicle Typ...\ndbl  (6): Postal Code, Model Year, Electric Range, Base MSRP, Legislative Di...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nExplore Data\n\nprop.table(table(eCar$`Electric Vehicle Type`)) %&gt;% pander::pander()\n\n\n\n\n\n\n\n\nBattery Electric Vehicle (BEV)\nPlug-in Hybrid Electric Vehicle (PHEV)\n\n\n\n\n0.7815\n0.2185\n\n\n\n\nprop.table(table(eCar$`Clean Alternative Fuel Vehicle (CAFV) Eligibility`)) %&gt;% pander::pander()\n\n\nTable continues below\n\n\n\n\n\n\nClean Alternative Fuel Vehicle Eligible\nEligibility unknown as battery range has not been researched\n\n\n\n\n0.3794\n0.5088\n\n\n\n\n\n\n\n\n\nNot eligible due to low battery range\n\n\n\n\n0.1117\n\n\n\n\n\nCan conclude that in this data there are significantly more BEVs than PHEVs and that the majority of electric vehicles are CAFV eligible, however half seem to have an unknown type of battery or lack research.\n\n\nElectric Vehicle Type And CAFV Eligibility by Electric Range\n\nplot1&lt;-\n  eCar %&gt;%\n    ggplot(aes(x = `Electric Range`, col = \"red\")) +\n    geom_histogram(binwidth = 30, position = \"dodge\") +\n    theme_minimal() +\n    facet_wrap(~`Electric Vehicle Type`) +\n    labs(title = \"Electric Range by CAFV Eligibility\",\n         x = \"Electric Range (Miles)\",\n         y = \"Count\",\n         caption = \"Data Source: Washington State Department of Licensing\") +\n    theme(legend.position = \"none\")\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nggplotly(plot1, tooltip = c(\"x\", \"y\"))\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\nLooking at the overall results, can conclude that the majority of electric vehicles have a range of 0-100 miles, and that the majority of electric vehicles are CAFV eligible. However, there are a significant number of electric vehicles with unknown CAFV eligibility and electric range.\n\neCar %&gt;%\n  filter(`Base MSRP` != 0 & `Base MSRP` != 845000) %&gt;% # Remove 0 and 845000 (huge outlier) MSRP\n  ggplot(aes(x = `Model Year`, y = `Base MSRP`)) +\n  geom_boxplot(aes(color = `Electric Vehicle Type`)) +\n  theme_minimal() +\n  labs(title = \"Electric Vehicle Base MSRP by Model Year\",\n       x = \"Model Year\",\n       y = \"Base MSRP\",\n       color = \"Electric Vehicle Type\") +\n  scale_y_continuous(labels = scales::dollar)\n\n\n\n\n\n\n\n\nLooking at the overall results, can conclude that the base MSRP of electric vehicles has decreased over time, and that the base MSRP of BEVs is generally lower than that of PHEVs. However, there are a significant number of electric vehicles with unknown base MSRP. For the Plugin hybrids as well, there was one extreme outlier with a base MSRP of $845,000. This was removed from the data to better visualize the boxplot."
  },
  {
    "objectID": "posts/PalmerPenguins Data Analysis/index.html",
    "href": "posts/PalmerPenguins Data Analysis/index.html",
    "title": "Palmer Penguin Species Analysis",
    "section": "",
    "text": "penguins\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(palmerpenguins)\nggplot(data=penguins, aes(x=body_mass_g, fill=species)) +\n  geom_bar() +\n  theme_classic()\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_count()`).\n\n\n\n\n\n\n\n\n\nPlot showing the distribution of penguins body mass, grouped by specie.\n\nggplot(data=penguins, aes(x=species, y=body_mass_g)) +\n  geom_boxplot() +\n  geom_jitter() +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  theme(title = element_text(face = \"bold\")) +\n  labs(title=\"Penguin Body Mass by Species\", x=\"Species\", y=\"Body Mass (g)\")\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nBoxplot showing the distribution of penguins body mass, grouped by specie.\n\nggplot(data=penguins, aes(x=species, y=flipper_length_mm)) +\n  geom_boxplot() +\n  geom_jitter() +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  theme(title = element_text(face = \"bold\")) +\n  labs(title=\"Penguin Flipper Length by Species\", x=\"Species\", y=\"Flipper Length (mm)\")\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nBoxplot showing the distribution of penguins flipper length, grouped by specie."
  },
  {
    "objectID": "posts/Super Bowl Views/index.html",
    "href": "posts/Super Bowl Views/index.html",
    "title": "Super Bowl Views",
    "section": "",
    "text": "NFL\n\n\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(reactable)\nlibrary(plotly)\n\n\nRead in Data\n\nsb &lt;- read_csv(here(\"posts/Super Bowl Views/super-bowl-ratings.csv\"))\n\nRows: 55 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): super_bowl, network\ndbl  (6): super_bowl_number, average_viewers, total_viewers, household_ratin...\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nreactable(sb, defaultPageSize = 10, searchable = TRUE, highlight = TRUE, striped = TRUE)\n\n\n\n\n\n\n\nTime Series of Views\n\nplot1 &lt;-\n  sb %&gt;%\n    ggplot(aes(x = date, y = average_viewers)) +\n    geom_line() +\n    labs(title = \"Super Bowl Average Viewership Over Time\",\n         x = \"Date\",\n         y = \"Average Viewers\") +\n    theme_minimal() +\n    geom_point(color = \"blue\") +\n    theme(plot.title = element_text(hjust = 0.5)) +\n    scale_y_continuous(labels = scales::comma)\n\nggplotly(plot1)\n\n\n\n\n\nLooking at the progression of the viewership of the Super Bowl over time, we can see that it has been increasing. This is likely due to the increase in population and the increase in the number of people who have access to television. furthermore, can notice a drop in viewership in 2020, which is likely due to the COVID pandemic.\n\n\nFurther Exploration\n\nplot2 &lt;-\n  sb %&gt;%\n    ggplot(aes(x = date, y = household_rating)) +\n    geom_line() +\n    labs(title = \"Super Bowl House Hold Rating Over Time\",\n         x = \"Date\",\n         y = \"House Hold Rating\") +\n    theme_minimal() +\n    geom_point(color = \"blue\") +\n    theme(plot.title = element_text(hjust = 0.5))\n\nggplotly(plot2)\n\n\n\n\n\nlooking at the household rating at seen an increase since the start of the super bowl,but levels out within the range of 40-50 household rating. Again this is likely due to the increase in the number of households that have access to television. Furthermore, late 1900s can see a positive trend, however starts to decrease and level out in the 2000s.\n\nplot3 &lt;- \n  sb %&gt;%\n    ggplot(aes(x = date, y = cost_of_30_second_ad_usd)) +\n    geom_line() +\n    labs(title = \"Super Bowl Cost of 30sec AD Over Time\",\n         x = \"Date\",\n         y = \" cost\") +\n    theme_minimal() +\n    geom_point(color = \"blue\") +\n    theme(plot.title = element_text(hjust = 0.5)) +\n    scale_y_continuous(labels = scales::dollar)\n\nggplotly(plot3)\n\n\n\n\n\nLooking at the cost of a 30 second ad, we can see that it has been exponentially increasing over time. Where the start of 2000s marks a significant increase in the cost of the ADs.\n\nplot4 &lt;-\n  sb %&gt;%\n    ggplot(aes(x = date, y = total_viewers), color = network) +\n    geom_line(aes(color = network)) +\n    labs(title = \"Super Bowl Total Viewers Over Time\",\n         x = \"Date\",\n         y = \"Total Viewers\",\n         color = \"TV Network\") +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5)) +\n    scale_y_continuous(labels = scales::comma) +\n    scale_fill_viridis_d()\n\nggplotly(plot4)\n\n\n\n\n\nLooking at the total viewers over time, we can see that the total viewers have been increasing over time. Furthermore, we can see that the total viewers are split between the networks, with CBS having the most viewers in 2020. Also NBC was the first to start broadcasting then CBS, later ABC started around 1985 and FOX started around 1998. Fox during 2017-2020 has the highest viewership."
  },
  {
    "objectID": "posts/Pro Soccer Players 2022-2023/index.html",
    "href": "posts/Pro Soccer Players 2022-2023/index.html",
    "title": "Pro Soccer Player Stats 2022-2023 Season",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "posts/Pro Soccer Players 2022-2023/index.html#introduction",
    "href": "posts/Pro Soccer Players 2022-2023/index.html#introduction",
    "title": "Pro Soccer Player Stats 2022-2023 Season",
    "section": "Introduction",
    "text": "Introduction\nThis is a project to analyze the 2022-2023 season of the top 5 European soccer leagues. We will be using data from the following leagues:\n\nEnglish Premier League (England)\nLigue 1 (France)\nBundesliga (Germany)\nSerie A (Italy)\nLa Liga (Spain)\n\nThe dataset was obtained from Kaggle and contains player statistics for the 2022-2023 season. Each observation is a player and the columns contain various statistics such as goals, assists, and minutes played. There are 2,689 total observations and 124 variables. The dataset can be found here."
  },
  {
    "objectID": "posts/Pro Soccer Players 2022-2023/index.html#top-five-scorers-in-2022-2023-season",
    "href": "posts/Pro Soccer Players 2022-2023/index.html#top-five-scorers-in-2022-2023-season",
    "title": "Pro Soccer Player Stats 2022-2023 Season",
    "section": "Top Five scorers in 2022-2023 Season",
    "text": "Top Five scorers in 2022-2023 Season\n\nsoccer %&gt;%\n  select(Player, Nation, Pos, Squad, Comp, Goals) %&gt;%\n  arrange(desc(Goals)) %&gt;%\n  head() %&gt;% pander::pander()\n\n\n\n\n\n\n\n\n\n\n\n\nPlayer\nNation\nPos\nSquad\nComp\nGoals\n\n\n\n\nErling Haaland\nNOR\nFW\nManchester City\nPremier League\n25\n\n\nHarry Kane\nENG\nFW\nTottenham\nPremier League\n17\n\n\nVictor Osimhen\nNGA\nFW\nNapoli\nSerie A\n16\n\n\nFolarin Balogun\nENG\nFW\nReims\nLigue 1\n14\n\n\nWissam Ben Yedder\nFRA\nFW\nMonaco\nLigue 1\n14\n\n\nRobert Lewandowski\nPOL\nFW\nBarcelona\nLa Liga\n14"
  },
  {
    "objectID": "posts/Pro Soccer Players 2022-2023/index.html#goals-by-position",
    "href": "posts/Pro Soccer Players 2022-2023/index.html#goals-by-position",
    "title": "Pro Soccer Player Stats 2022-2023 Season",
    "section": "Goals by Position",
    "text": "Goals by Position\n\nsoccer %&gt;%\n  group_by(Pos) %&gt;%\n  summarise(Total_Goals = sum(Goals)) %&gt;%\n  arrange(desc(Total_Goals)) %&gt;% pander::pander()\n\n\n\n\n\n\n\n\nPos\nTotal_Goals\n\n\n\n\nFW\n1048\n\n\nFWMF\n497\n\n\nMF\n457\n\n\nDF\n314\n\n\nMFFW\n306\n\n\nDFMF\n61\n\n\nFWDF\n36\n\n\nMFDF\n30\n\n\nDFFW\n14\n\n\nGK\n0\n\n\n\n\n\nThe"
  },
  {
    "objectID": "posts/Pro Soccer Players 2022-2023/index.html#goals-by-league",
    "href": "posts/Pro Soccer Players 2022-2023/index.html#goals-by-league",
    "title": "Pro Soccer Player Stats 2022-2023 Season",
    "section": "Goals by League",
    "text": "Goals by League\n\nsoccer %&gt;%\n  group_by(Comp) %&gt;%\n  summarise(Total_Goals = sum(Goals)) %&gt;%\n  arrange(desc(Total_Goals)) %&gt;% pander::pander()\n\n\n\n\n\n\n\n\nComp\nTotal_Goals\n\n\n\n\nLigue 1\n618\n\n\nPremier League\n564\n\n\nBundesliga\n563\n\n\nSerie A\n538\n\n\nLa Liga\n480\n\n\n\n\n\nSpread of goals is fairly even across the top 5 leagues."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Matt Maslow Blog",
    "section": "",
    "text": "Pro Soccer Player Stats 2022-2023 Season\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\nSports\n\n\n\n\n\n\n\n\n\nMar 8, 2024\n\n\nMatthew Maslow & Ben Moolman\n\n\n\n\n\n\n\n\n\n\n\n\nElectric Car Population in Washington\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nFeb 23, 2024\n\n\nMatthew Maslow\n\n\n\n\n\n\n\n\n\n\n\n\nSuper Bowl Views\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\nshiny app\n\n\n\n\n\n\n\n\n\nFeb 5, 2024\n\n\nMatthew Maslow\n\n\n\n\n\n\n\n\n\n\n\n\nSuper Bowl Views\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\nsports\n\n\n\n\n\n\n\n\n\nFeb 5, 2024\n\n\nMatthew Maslow\n\n\n\n\n\n\n\n\n\n\n\n\nMini Project: Study of # Satellites per Crab\n\n\n\n\n\n\nMini Projects\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nFeb 2, 2024\n\n\nMatthew Maslow\n\n\n\n\n\n\n\n\n\n\n\n\nPalmer Penguin Species Analysis\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nJan 31, 2024\n\n\nMatthew Maslow\n\n\n\n\n\n\n\n\n\n\n\n\nAbout Me\n\n\n\n\n\n\nabout\n\n\n\n\n\n\n\n\n\nFeb 1, 2020\n\n\nMatthew Maslow\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Final Project: March Madness Analysis/index.html",
    "href": "posts/Final Project: March Madness Analysis/index.html",
    "title": "🏀 March Madness Analysis 🏀",
    "section": "",
    "text": "NCAA March Madness\n\n\n\nIntroduction\nIn my shiny application, I delved into data from the 2024 March Madness tournament, examining teams’ offensive and defensive statistics alongside their win probabilities against Division 1 teams. Additionally, I analyzed another dataset spanning from 1985 to 2019, detailing tournament winners and losers for each playoff round, including score results over the years. My analysis revealed that in the 2024 March Madness tournament, teams with higher two-point percentages and lower defensive two-point percentages tended to achieve more success. I also observed that in the first round of playoffs from 1985 to 2019, most games had score differences below 20 points, with only one game exceeding a 50-point difference. The subsequent rounds generally featured score differences below 30 points, except for the Final Four, where one game in 2016 saw a 44-point difference, with Villanova defeating Oklahoma 95 to 51. Furthermore, only one winning team in these years scored over 100 points in the Final game. The data being used in my shiny application is on this past March Madness tournament, 2024 playoff, along with tournament results from each playoff round starting in the year 1985, when the league officially switched over to 64 team format, all the way to 2019, where it contains each results of every playoff round, including the winning/losing team, winner/loser score, along with a calculated difference in the two scores, to look at score variation among between the competing teams.\n\n\nInteresting Findings\nIn the 2024 tournament (starting app-window), Connecticut and Purdue were the top seeds, with Alabama ranked fourth and NC State ranked 11th, making them the underdogs. Barthag ratings indicated Connecticut and Purdue had higher probabilities of beating Division One teams compared to Alabama and NC State. In the final four, Connecticut defeated Alabama, showcasing stronger offensive efficiency, two-point percentage, and offensive rebounds. Similarly, Purdue lost to Connecticut despite a higher offensive rebound rate and better three-point shooting, as Connecticut maintained stronger offensive efficiency and two-point percentage throughout the game. Connecticut’s offensive success was evident in the championship game against Purdue, where they led consistently until victory. Wins Above the Bubble (WAB) stats suggested Connecticut entered the tournament with the best chances, while NC State, initially with no chance, emerged as the underdog. Analyzing defensive aspects, Alabama showcased weaker defense compared to Connecticut, evident in higher points allowed per possession and free-throw rates. Similarly, Purdue exhibited stronger defensive efficiency compared to NC State. In the championship game, Connecticut’s better defensive performance, with fewer points allowed per possession and a lower allowed two-point percentage, contributed to their victory.Overall, Connecticut’s strong and balanced offensive and defensive performance contributed to their success in the tournament.\nLooking at the plot (second app-window), where it has the years on the x-axis while the difference in the winning score versus the losing one. I chose the differences to captivate both the team’s scores and is a good measure of whether the game was a blowout or a close one. The trend of the scores has several close games where the difference is less than ten points, starting in 1985 and going up until 1990, where UNLV beat Duke 103-73. It was one of the largest score differences for the championship games, a 30-point difference. It was also the first big blowout in the finals in 1985 when the league switched to a 64-team tournament bracket. Following 1990, it dips down below ten again, then back up to the second-highest score difference in 1992, where Duke beat Michigan 71-51, a 20-point score difference—from 1995 to 2019, the score difference range between zero-to-20-point. Furthermore, during that duration, the scores may seem to fluctuate up and down a bit. However, the scores seem to increase gradually towards a twenty-point score difference. Also, following the 2010 game, the scores declined slightly until 2016, indicating that those championship games were gradually becoming more competitive. While some fluctuations occur, most championship games remain close and competitive, with score differences typically less than ten points.\n\n\nShiny App\nLink to App: March Madness Shiny App\n\n\n——————————————————————————————\nCode Below\n\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(shiny)\nlibrary(bslib)\n\n\n\nmm24Qualified &lt;- read_csv(\"mm24_TournamentTeams.csv\")\nmmHist &lt;- read_csv(\"mmHistorical.csv\")\n\nmm24Qualified &lt;- \n  mm24Qualified %&gt;%\n  select(-Rec) %&gt;%\n  rename(Games_Played = G) %&gt;%\n  mutate(Team = as.character(Team)) %&gt;%\n  separate(Team, sep = \",\", into = c(\"Team\", \"Tournament_Status\")) %&gt;%\n  separate(Team, sep = \"(?&lt;=\\\\D)(?=\\\\d)\",\n           into = c(\"Team\", \"PlayOff_Seed\")) %&gt;%\n  separate(PlayOff_Seed, sep = \"\\\\D\", into = c(\"PlayOff_Seed\", \"rand\")) %&gt;%\n  select(-rand, -Tournament_Status) %&gt;%\n  mutate(Conf = as.factor(Conf),\n         PlayOff_Seed = as.integer(PlayOff_Seed))\n\nmmHist &lt;- \n  mmHist %&gt;%\n  rename(`Seed 1` = Seed...5,\n         `Score 1` = Score...6,\n         `Team 1` = Team...7,\n         `Team 2` = Team...8,\n         `Score 2` = Score...9,\n         `Seed 2` = Seed...10) %&gt;%\n  select(-`Region Number`) %&gt;%\n  mutate(Round = as.factor(Round),\n         `Region Name` = as.factor(`Region Name`)) %&gt;%\n  mutate(winner_score = ifelse(`Score 1` &gt; `Score 2`, `Score 1`, `Score 2`),\n         winning_team = ifelse(`Score 1` &gt; `Score 2`, `Team 1`, `Team 2`),\n         losing_team = ifelse(`Score 1` &gt; `Score 2`, `Team 2`, `Team 1`),\n         losing_score = ifelse(`Score 1` &gt; `Score 2`, `Score 2`, `Score 1`),\n         scoreDiff = (winner_score-losing_score)) %&gt;%\n  arrange(Year)\n\n\n\nui &lt;- navbarPage(\n  title = \"🏀 March Madness Analysis\",\n  fluid = TRUE, theme = bs_theme(preset = \"yeti\"), position = \"fixed-top\",\n  tabPanel(\"Statistics\",\n           icon = icon(\"table\"),\n           tags$br(),\n           tags$br(),\n           titlePanel(tags$h1(\"2024 Tournament Results\", style = \"font-weight: bold; text-align: center; color: darkblue; font-size: 40px;\")), \n           tags$p(\"Author: Matt Maslow\", style = \"font-size: 18px;  text-align: center; color: darkblue;\"),\n           tags$hr(style = \"border-top: 3px solid #ccc;\"),\n           fluidRow(\n             column(4, offset = 3, radioButtons(\"stat_type\", \n                                                label = \"Pick a Stat:\",\n                                                choices = c(\"Defensive and Opponent Stats\", \"Offensive Stats\"),\n                                                selected = \"Offensive Stats\")),\n             column(4, selectizeInput(\"Team_choice\", label = \"Select multiple teams:\",\n                                      choices = mm24Qualified$Team,\n                                      multiple = TRUE))),\n           tags$hr(style = \"border-top: 3px solid #ccc;\"),\n           verbatimTextOutput(\"Variable_Description\"),\n           tags$hr(style = \"border-top: 3px solid #ccc;\"),\n           dataTableOutput(\"Team_Table\")\n  ),\n  tabPanel(\"Historical Plots\",\n           icon = icon(\"chart-line\"),\n           tags$br(),\n           tags$br(),\n           titlePanel(tags$h1(\"Tournament Results from 1985 to 2019\", style = \"font-weight: bold; text-align: center; color: darkblue; font-size: 40px;\")),\n           tags$p(\"Author: Matt Maslow\", style = \"font-size: 18px;  text-align: center; color: darkblue;\"),\n           tags$br(),\n           tags$hr(style = \"border-top: 3px solid #ccc;\"),\n           fluidRow(\n             column(3, selectInput(\"round_choice\",\n                                   label = \"Choose a playoff round:\",\n                                   choices = c(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"),\n                                   selected = \"1\") ),\n             column(3, selectInput(\"region_choice\",\n                                   label = \"Choose a region:\",\n                                   choices = c(\"West\", \"East\", \"Midest\", \"Southeast\", \"Final Four\", \"Championship\", \"South\", \"Southwest\"),\n                                   selected = \"West\") ),\n             column(3, sliderInput(\"year_range\",\n                                   label = \"Choose a year range:\",\n                                   min = 1985, max = 2019,\n                                   value = c(1995, 2009), \n                                   sep = \"\") ),\n             column(3, selectInput(\"y_var_choice\",\n                                   label = \"Choose Varaible to plot on y-axis:\",\n                                   choices = c(\"winner_score\", \"losing_score\", \"scoreDiff\"),\n                                   selected = \"winner_score\") )),\n           tags$hr(style = \"border-top: 3px solid #ccc;\"),\n           tags$p(\"Select a playoff round from 1 to 6 (1 = first round, 2 = second round, 3 = Sweet 16, 4 = Elite 8, 5 = Final Four, 6 = Championship). The visualization updates based on the chosen round, showing teams' regions still in contention. Adjusting the years can enhance clarity. Utilize the interactive features in the top-right corner to compare game data on hover, displaying team names and results simultaneously.\", style = \"font-size: 14px; text-align: center; color: black;\"),\n           tags$hr(style = \"border-top: 3px solid #ccc;\"),\n           plotlyOutput(\"history_plot\", width = \"100%\", height = 600),\n           tags$hr(style = \"border-top: 3px solid #ccc;\"),\n           dataTableOutput(\"hist_table\")\n  )\n)\n\nserver &lt;- function(input, output, session) {\n  \n  observeEvent(input$round_choice, {\n    region_choices &lt;- mmHist %&gt;%\n      filter(Round == input$round_choice) %&gt;%\n      distinct(`Region Name`) %&gt;%\n      pull(`Region Name`)\n    updateSelectInput(inputId = \"region_choice\",\n                      choices = region_choices)\n  })\n  \n  mm24TableFiltered &lt;- reactive({\n    if (input$stat_type == \"Defensive and Opponent Stats\"){\n      mm24TableFiltered &lt;- \n        mm24Qualified %&gt;% \n        filter(Team %in% input$Team_choice) %&gt;%\n        select(Team, PlayOff_Seed, Conf, Games_Played, Barthag, AdjDE, `EFGD%`,\n               DRB, FTRD, `2P%D`, `3P%D`, `Adj T.`, WAB) %&gt;%\n        arrange(PlayOff_Seed)\n    } else {\n      mm24TableFiltered &lt;- \n        mm24Qualified %&gt;% \n        filter(Team %in% input$Team_choice) %&gt;%\n        select(Team, PlayOff_Seed, Conf, Games_Played, Barthag, AdjOE, `EFG%`,\n               ORB, FTR, `2P%`, `3P%`, `Adj T.`, WAB) %&gt;%\n        arrange(PlayOff_Seed)\n    }\n  })\n  \n  output$Variable_Description &lt;- renderPrint({\n    if (input$stat_type == \"Defensive and Opponent Stats\"){\n      cat(\"Defensive and Opponent Stats: Variable Description\\n\",\n          \"-------------------------------------------------------\\n\",\n          \"Team:        | Team name\\n\",\n          \"PlayOff_Seed:| Playoff Seed\\n\",\n          \"Conf:        | Conference\\n\",\n          \"Games_Played:| Number of games played\\n\",\n          \"Barthag:     | Power Rating (Chance of beating an average Division I team)\\n\",\n          \"AdjDE:       | Adjusted Defensive Efficiency (An estimate of points allowed per 100 possessions had against an average D1 offense)\\n\",\n          \"EFGD%:       | Effective Field Goal percentage scored\\n\",\n          \"DRB:         | Defensive Rebound percentage\\n\",\n          \"FTRD:        | Free Throw Rate allowed\\n\",\n          \"2P%D:        | Two-Point allowed\\n\",\n          \"3P%D:        | Three-Point allowed\\n\",\n          \"Adj T.:      | Adjusted Tempo (estimate of tempo (possessions per 40 minutes) a team has against a team that plays at avg D1 tempo)\\n\",\n          \"WAB:         | Wins Above Bubble (the cut off b/n making March Madness Tournament and or not\\n\"\n      )\n    } else {\n      cat(\"Offensive Stats: Variable Description\\n\",\n          \"-------------------------------------------------------\\n\",\n          \"Team:        | Team name\\n\",\n          \"PlayOff_Seed:| Playoff Seed\\n\",\n          \"Conf:        | Conference\\n\",\n          \"Games_Played:| Number of games played\\n\",\n          \"Barthag:     | Power Rating (Chance of beating an average Division I team)\\n\",\n          \"AdjOE:       | Adjusted Offensive Efficiency (An estimate of points scored per 100 possessions has against an average D1 defense)\\n\",\n          \"EFG%:        | Effective Field Goal Percentage Allowed\\n\",\n          \"ORB:         | Offensive Rebound percentage\\n\",\n          \"FTR:         | Free Throw Rate (Free Throws Attempted per Field Goal Attempted)\\n\",\n          \"2P%:         | Two-Point Field Goal Percentage (Two-Point Field Goal Attempts per Field Goal Attempts)\\n\",\n          \"3P%:         | Three-Point Field Goal Percentage (Three-Point Field Goal Attempts per Field Goal Attempts)\\n\",\n          \"Adj T.:      | Adjusted Tempo (estimate of tempo (possessions per 40 minutes) a team has against a team that plays at avg D1 tempo)\\n\",\n          \"WAB:         | Wins Above Bubble (the cut off b/n making March Madness Tournament and or not\\n\"\n      )\n    }\n  })\n  \n  output$Team_Table &lt;- \n    renderDataTable({mm24TableFiltered()},\n                    options = list(searching = FALSE, paging = FALSE, info = FALSE, scrollX = TRUE)\n    )\n  \n  mmHistPlot &lt;- reactive({\n    if (input$region_choice == \"West\"){\n      mmHist &lt;- mmHist %&gt;%\n        filter(`Region Name` == \"West\" & Round == input$round_choice & Year &gt;= input$year_range[1] & Year &lt;= input$year_range[2])\n    } else {\n      mmHist &lt;-\n        mmHist %&gt;%\n        filter(Round == input$round_choice & Year &gt;= input$year_range[1] & Year &lt;= input$year_range[2] & `Region Name` == input$region_choice)\n    }\n  })\n  \n  output$history_plot &lt;- renderPlotly({\n    \n    if (input$y_var_choice == \"winner_score\"){\n      \n      plt &lt;- mmHistPlot() %&gt;%\n        ggplot(aes(Year, winner_score, fill = winning_team, label = losing_score, label2 = losing_team))+\n        geom_point() +\n        theme_minimal() +\n        scale_colour_viridis_c() +\n        labs(title = if(input$year_range[1] == input$year_range[2]){\n          paste(\"The\", input$year_range[1], \"NCAA Historic Tournament Results:\\n \\t\\tRegion:\", input$region_choice, \"& Round:\", input$round_choice)\n        }else{\n          paste(\"The\", input$year_range[1], \"to\", input$year_range[2], \"NCAA Historic Tournament Results:\\n \\t\\tRegion:\", input$region_choice, \"& Round:\", input$round_choice)\n        },\n        x = \"Year\",\n        y = input$y_var_choice,\n        fill = \"Winning Team\") +\n        scale_x_continuous(breaks = seq(input$year_range[1], input$year_range[2], 5)) +\n        theme(legend.position = \"none\") +\n        theme(plot.title = element_text(face = \"bold\", size = 14))\n      ggplotly(plt, tooltip = c(\"x\", \"y\", \"fill\", \"label\", \"label2\"))\n      \n    } else if (input$y_var_choice == \"losing_score\"){\n      \n      plt &lt;- mmHistPlot() %&gt;%\n        ggplot(aes(Year, losing_score, fill = losing_team, label = winner_score, label2 = winning_team))+\n        geom_point() +\n        theme_minimal() +\n        scale_colour_viridis_c() +\n        labs(title = if(input$year_range[1] == input$year_range[2]){\n          paste(\"The\", input$year_range[1], \"NCAA Historic Tournament Results:\\n \\t\\tRegion:\", input$region_choice, \"& Round:\", input$round_choice)\n        }else{\n          paste(\"The\", input$year_range[1], \"to\", input$year_range[2], \"NCAA Historic Tournament Results:\\n \\t\\tRegion:\", input$region_choice, \"& Round:\", input$round_choice)\n        },\n        x = \"Year\",\n        y = input$y_var_choice,\n        fill = \"Losing Team\") +\n        scale_x_continuous(breaks = seq(input$year_range[1], input$year_range[2], 5)) +\n        theme(legend.position = \"none\") +\n        theme(plot.title = element_text(face = \"bold\", size = 14))\n      ggplotly(plt, tooltip = c(\"x\", \"y\", \"fill\", \"label\", \"label2\"))\n      \n    } else if (input$y_var_choice == \"scoreDiff\"){\n      \n      plt &lt;- mmHistPlot() %&gt;%\n        ggplot(aes(Year, scoreDiff, fill = winning_team, label = winner_score, label2 = losing_team, label3 = losing_score))+\n        geom_point() +\n        theme_minimal() +\n        scale_colour_viridis_c() +\n        labs(title = if(input$year_range[1] == input$year_range[2]){\n          paste(\"The\", input$year_range[1], \"NCAA Historic Tournament Results:\\n \\t\\tRegion:\", input$region_choice, \"& Round:\", input$round_choice)\n        }else{\n          paste(\"The\", input$year_range[1], \"to\", input$year_range[2], \"NCAA Historic Tournament Results:\\n \\t\\tRegion:\", input$region_choice, \"& Round:\", input$round_choice)\n        },\n        x = \"Year\",\n        y = \"Diff in Winning versus Losing scores\",\n        fill = \"Winning Team\") +\n        scale_x_continuous(breaks = seq(input$year_range[1], input$year_range[2], 5)) +\n        theme(legend.position = \"none\") +\n        theme(plot.title = element_text(face = \"bold\", size = 14))\n      ggplotly(plt, tooltip = c(\"x\", \"y\", \"fill\", \"label\", \"label2\", \"label3\"))\n      \n    }\n    \n  })\n  \n  output$hist_table &lt;- renderDataTable({\n    mmHistPlot() %&gt;% \n      select(Year, Round, `Region Name`, `Seed 1`, `Team 1`, `Score 1`, `Seed 2`, `Team 2`, `Score 2`) %&gt;%\n      mutate(Winner = ifelse(`Score 1` &gt; `Score 2`, `Team 1`, `Team 2`))\n  }, options = list(searching = FALSE, paging = FALSE, info = FALSE, scrollX = TRUE))\n  \n}\n\nshinyApp(ui, server)"
  }
]